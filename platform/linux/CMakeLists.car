# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 2.8.11)

# Project name
project(Solar2Dcar)

# This setting is useful for providing JSON file used by CodeLite for code completion
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

set(CONFIGURATION_NAME "Release")

set(CL_WORKSPACE_DIRECTORY .)
# Set default locations
set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/${CL_WORKSPACE_DIRECTORY}/cmake-build-${CONFIGURATION_NAME}/output)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})

# Projects


# Top project
# Define some variables
set(PROJECT_Solar2Dcar_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/")



#{{{{ User Code 1
# Place your code here
#}}}}

include_directories(
    .
    .
    ../../librtt
    ../../librtt/Core

)


# Compiler options
add_definitions(-isysroot "${SYSROOT}")
add_definitions(--target=${TARGET})
add_definitions(--sysroot=${SYSROOT})
add_definitions(--gcc-toolchain=${TOOLCHAIN})
add_definitions(-D_FILE_OFFSET_BITS=64)

add_definitions(-O2)
add_definitions(-Wfatal-errors)
add_definitions(-std=c++11)
add_definitions(-g3)
add_definitions(-Wno-narrowing)
add_definitions(-Wall)
add_definitions(
    -DNDEBUG
    -DRtt_LINUX_ENV
    -DRtt_NO_ARCHIVE
)


# Linker options
set(LINK_OPTIONS -s -v --sysroot=${SYSROOT} --target=${TARGET} --gcc-toolchain=${TOOLCHAIN} -fuse-ld=lld)


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
link_directories(
    .
    ./lib
    ${SYSROOT}/usr/lib/gcc/${TARGET}/8
    ${SYSROOT}/usr/lib/arm-linux-gnueabihf
)

# Define the CXX sources
set ( CXX_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/../../librtt/Core/Rtt_String.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../../tools/car/main.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../../tools/car/Rtt_Car.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../../librtt/Rtt_Archive.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../../librtt/Core/Rtt_FileSystem.cpp
)

set_source_files_properties(
    ${CXX_SRCS} PROPERTIES COMPILE_FLAGS 
    " -O2 -Wfatal-errors -std=c++11 -g3 -Wno-narrowing")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_executable(Solar2Dcar ${RC_SRCS} ${CXX_SRCS} ${C_SRCS})
target_link_libraries(Solar2Dcar ${LINK_OPTIONS})



#{{{{ User Code 3
# Place your code here
#}}}}

