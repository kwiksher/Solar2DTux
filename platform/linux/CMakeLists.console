# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 2.8.11)

# Project name
project(Solar2DConsole)

# This setting is useful for providing JSON file used by CodeLite for code completion
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

set(CONFIGURATION_NAME "Release")

set(CL_WORKSPACE_DIRECTORY .)
# Set default locations
set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/${CL_WORKSPACE_DIRECTORY}/cmake-build-${CONFIGURATION_NAME}/output)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})

# Projects


# Top project
# Define some variables
set(PROJECT_Solar2DConsole_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/")



#{{{{ User Code 1
# Place your code here
#}}}}

include_directories(
    .
    ./wx/include

)


# Compiler options
add_definitions(-isysroot "${SYSROOT}")
add_definitions(--target=${TARGET})
add_definitions(--sysroot=${SYSROOT})
add_definitions(--gcc-toolchain=${TOOLCHAIN})
add_definitions(-D_FILE_OFFSET_BITS=64)

add_definitions(-isystem ${SYSROOT}/usr/lib/${TARGET}/glib-2.0/include/)
add_definitions(-isystem ${SYSROOT}${ISYSTEM_0})
add_definitions(-isystem ${SYSROOT}${ISYSTEM_1})
add_definitions(-isystem ${SYSROOT}${ISYSTEM_2})

#add_definitions(-fpermissive)
add_definitions(-O2)
add_definitions(-g3)
#add_definitions(-std=c++11)
add_definitions(-Wfatal-errors)
add_definitions(-Wno-narrowing)
add_definitions(-Wall)
add_definitions(-v)
add_definitions(
    -DwxUSE_MEDIACTRL=1
    -DwxUSE_WEBVIEW=1
    -D__WXGTK__
    -DHAVE_SSIZE_T
    -DwxUSE_XTEST
    -DwxHAS_INOTIFY
    -DwxUSE_SELECT_DISPATCHER
    -DWXWIN_COMPATIBILITY_3_0
    -DwxUSE_PRIVATE_FONTS
    -DwxUSE_ACTIVITYINDICATOR
    -DwxUSE_ADDREMOVECTRL
    -DwxUSE_UNSAFE_WXSTRING_CONV
    -DwxUSE_STD_CONTAINERS_COMPATIBLY
    -DwxUSE_GLCANVAS
    -DFT2_BUILD_LIBRARY
)


# Linker options
#set(LINK_OPTIONS -s -v --sysroot=${SYSROOT} -Wl,-rpath=${SYSROOT}${LIB_3})   

set(LINK_OPTIONS -s -v --sysroot=${SYSROOT} --target=${TARGET} --gcc-toolchain=${TOOLCHAIN} -fuse-ld=lld)

set(LINK_OPTIONS ${LINK_OPTIONS} -rdynamic -lGL -lopenal -lgdk-3 -lpangocairo-1.0 -lgthread-2.0 -pthread -lX11 -lXxf86vm -lSM -lgtk-3 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lXtst -lpangoft2-1.0 -lpango-1.0 -lfontconfig -lfreetype -lpng -lz -lexpat -ljpeg -ldl -lm -lwebkit2gtk-4.0 -ljavascriptcoregtk-4.0 -lgstreamer-1.0 -lgstvideo-1.0)


if(WIN32)
    # Resource options
    execute_process(COMMAND 
        wx-config --rcflags
        OUTPUT_VARIABLE
        CL_TMP_VAR
        OUTPUT_STRIP_TRAILING_WHITESPACE)
    string(STRIP ${CL_TMP_VAR} CL_VAR_1)
    set(RC_OPTIONS ${CL_VAR_1})
endif(WIN32)

# Library path
link_directories(
    .
    ./lib/${TARGET}
    ${SYSROOT}${LIB_1}
    ${SYSROOT}${LIB_2}
)


# Define the CXX sources
set ( CXX_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/Rtt_LinuxIPCServer.cpp
    ${CMAKE_CURRENT_LIST_DIR}/Rtt_LinuxConsoleApp.cpp
    ${CMAKE_CURRENT_LIST_DIR}/Rtt_LinuxIPCServerConnection.cpp
    ${CMAKE_CURRENT_LIST_DIR}/Rtt_LinuxConsole.cpp
)

set_source_files_properties(
    ${CXX_SRCS} PROPERTIES COMPILE_FLAGS 
    " -O2 -g3 -std=c++11 -Wfatal-errors -Wno-narrowing -D_FILE_OFFSET_BITS=64")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_executable(Solar2DConsole ${RC_SRCS} ${CXX_SRCS} ${C_SRCS})
target_link_libraries(Solar2DConsole ${LINK_OPTIONS} )

#target_link_libraries(Solar2DConsole
#    libwx_gtk3u-3.1.a
#    libwx_gtk3u_gl-3.1.a
#    libwxregexu-3.1.a
#    libwxscintilla-3.1.a
#    libwxtiff-3.1.a
#)

target_link_libraries(Solar2DConsole
    libwx_gtk3u-3.1-${TARGET}.a
    libwx_gtk3u_gl-3.1-${TARGET}.a
    libwxregexu-3.1-${TARGET}.a
    libwxscintilla-3.1-${TARGET}.a
    libwxtiff-3.1-${TARGET}.a
)


#{{{{ User Code 3
# Place your code here
#}}}}

